{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,SAChF,6BAAKL,EAAMG,QAAQG,OACnB,6BAAKN,EAAMG,QAAQI,YCFdC,G,MAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAGrB,aAFA,CAEA,SACIZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC6CJG,G,wDA/Cb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,mEACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAWkB,S,oBAS5C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAGZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAKlD,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIG,GAAG,iBAAP,+BACA,cAAC,EAAD,CACEQ,YAAY,yBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1CVI,IAAOC,YCIVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ce24bd29.chunk.js","sourcesContent":["import './card.styles.css'\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} alt=\"cats\" />\n        <h1>{props.monster.name}</h1>\n        <h4>{props.monster.email}</h4>\n    </div>\n)","import { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\n// () is a functional component and we can pass props to it.\nexport const CardList = props => {\n\n    return <div className='card-list'>\n    {\n        props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))\n    }      \n    </div>; \n}","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    // this is a funcitional component which can take props\n    // this does not have lifecycle methods, states, constructor\n    <input\n        className='search'\n        type='search'\n        placeholder={ placeholder }\n        onChange={ handleChange }\n    />\n);","import React from 'react'\n\nimport { CardList } from './components/card-list/card-list-component';\n\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends React. Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n  }\n\n  // lifecycle method\n  // fetch url response into json (promise)\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/gshanbhag525/cat-json/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters : users }));\n  }\n\n  handleChange = (e) => {\n    // e is a synthetic event\n    this.setState({ searchField: e.target.value })\n    // cant get \"this\" into scope so put it in constructor\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    // equivalent to \n    // const monsters = this.state.monsters;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    // when state is changed due to search\n    // searchField is set and the app is re-rendered by filtering \n    // the monsters array and then updating the cardList\n    return (\n      <div className=\"App\">\n        <h1 id=\"webPageHeading\">Cats Yellow Pages</h1>\n        <SearchBox \n          placeholder='search those who exist'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}